#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -fexpensive-optimizations -Os -O3 -std=c++11 -Wall -fexceptions -lgomp -fopenmp
RESINC = 
LIBDIR = 
LIB = -lgomp
LDFLAGS = 

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/global_realignment

OBJ_RELEASE = $(OBJDIR_RELEASE)/AlignmentMetrics.o $(OBJDIR_RELEASE)/FNW.o $(OBJDIR_RELEASE)/FSequence.o $(OBJDIR_RELEASE)/Profile.o $(OBJDIR_RELEASE)/ReformAlignInitializer.o $(OBJDIR_RELEASE)/main.o

all: release

clean: clean_release

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 
	cp ReadMe.txt bin/Release/ReadMe.txt
	cp GPL-LICENSE.txt bin/Release/GPL-LICENSE.txt
	
release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/AlignmentMetrics.o: AlignmentMetrics.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c AlignmentMetrics.cpp -o $(OBJDIR_RELEASE)/AlignmentMetrics.o

$(OBJDIR_RELEASE)/FNW.o: FNW.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c FNW.cpp -o $(OBJDIR_RELEASE)/FNW.o

$(OBJDIR_RELEASE)/FSequence.o: FSequence.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c FSequence.cpp -o $(OBJDIR_RELEASE)/FSequence.o

$(OBJDIR_RELEASE)/Profile.o: Profile.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Profile.cpp -o $(OBJDIR_RELEASE)/Profile.o

$(OBJDIR_RELEASE)/ReformAlignInitializer.o: ReformAlignInitializer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ReformAlignInitializer.cpp -o $(OBJDIR_RELEASE)/ReformAlignInitializer.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: bbefore_release after_release clean_release

